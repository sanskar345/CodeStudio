/*************************************************

    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/

Node* getIntersection(Node* head){
    if(head == NULL){
        return NULL;
    }

    Node* slow = head;
    Node* fast = head;

    while(slow != NULL && fast != NULL){
        fast = fast->next;
        if(fast != NULL){
            fast = fast->next;
        }
        slow = slow->next;
        if(slow == fast){
            return fast;
        }
    }
    return NULL;
}

Node* getStartingNode(Node* head){
    Node *intersection = getIntersection(head);
    Node *slow = head;

    if(intersection == NULL)
        return NULL;

    while(slow != intersection){
        slow = slow->next;
        intersection = intersection->next;

    }
    return slow;
}



Node *removeLoop(Node *head)
{
    // Write your code here.
    Node *start = getStartingNode(head);
    if(start == NULL)
        return head;
    Node *temp = start;
    while(temp->next != start){
        temp = temp->next;
    }
    temp->next = NULL;
    return head;

}
