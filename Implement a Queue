class Queue {
public:
    int *arr;
    int fr;
    int rear;
    int size;
    Queue() {
        // Implement the Constructor
        size = 100001;

        arr = new int[size];

        rear = 0;
        fr = 0;
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(rear == fr){
            return true;
        }
        return false;
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(rear != size-1){
            arr[rear] = data;
            rear++;
        }
    }

    int dequeue() {
        // Implement the dequeue() function
        if(rear == fr){
            return -1;
        }

        int data = arr[fr];
        arr[fr] = -1;
        fr++;
        if(rear == fr){
            rear = fr = 0;
        }
        return data;
    }

    int front() {
        // Implement the front() function
        if(rear == fr){
            return -1;
        }
        return arr[fr];
    }
};
